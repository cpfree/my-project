spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ${config.datasource.url}
    username: ${config.datasource.username}
    password: ${config.datasource.password}
    type: com.alibaba.druid.pool.DruidDataSource
    # 初始化时建立物理连接连接的个数
    initialSize: 1
    # 最小连接池数量
    minIdle: 1
    # 最大连接池数量
    maxActive: 5
    # 获取连接时最大等待时间(ms)，即60s
    maxWait: 60000
    # 1.Destroy线程会检测连接的间隔时间；2.testWhileIdle的判断依据
    timeBetweenEvictionRunsMillis: 60000
    # 最小生存时间ms
    minEvictableIdleTimeMillis: 600000
    maxEvictableIdleTimeMillis: 900000
    # 用来检测连接是否有效的sql
    validationQuery: SELECT 1 FROM DUAL
    # 申请连接时执行validationQuery检测连接是否有效，启用会降低性能
    testOnBorrow: false
    # 归还连接时执行validationQuery检测连接是否有效，启用会降低性能
    testOnReturn: false
    # 申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，
    # 执行validationQuery检测连接是否有效，不会降低性能
    testWhileIdle: true
    # 是否缓存preparedStatement，mysql建议关闭
    poolPreparedStatements: false
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,log4j

mybatis:
  # 注意：一定要对应mapper映射xml文件的所在路径
  mapper-locations: classpath:mappers/base/*.xml,classpath:mappers/combine/*.xml
  # mapper.xml文件中resultMap的type、parameterType、resultType会引用一些实体类，实体类需要时全类名, 配置这个属性后, 就可以仅仅写类的名字了.
  # 虽然可以配置这项来进行 pojo 包扫描，但其实我更倾向于在 mapper.xml 写全类名
  type-aliases-package: cn.cpf.web.base.model.entity
